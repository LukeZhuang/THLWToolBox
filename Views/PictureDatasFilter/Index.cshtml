@*@model IEnumerable<THLWToolBox.Models.PictureData>*@
@model THLWToolBox.Models.PictureDataViewModel
@using System.Text.RegularExpressions;
@using THLWToolBox.Helpers;

@{
    ViewData["Title"] = "Index";
}

<p><b><font color="red">*数据更新日期：@Html.Raw(GeneralHelper.DATA_UPDATE_DATE)</font></b></p>

<h2>绘卷筛选器</h2>
<p>
    <p>说明:</p>
    <p>1. 面板数值均为满级时的样子</p>
    <p>2. 面板类型若被勾选，则仅显示满足已勾选组合的绘卷。例如勾选体力和阳攻，则仅显示同时有体力+阳攻的绘卷</p>
</p>

<form asp-controller="PictureDatasFilter" asp-action="Index" method="get">
    <p><b>星级:</b></p>
    <p>@Html.CheckBox("RareType3", true) 三星 @Html.CheckBox("RareType4", true) 四星 @Html.CheckBox("RareType5", true) 五星</p>
    <p><b>绘卷效果:</b></p>
    <p>
        绘卷效果类型
        <select asp-for="EffectId" asp-items="Model.EffectTypes">
            <option value=null>任意</option>
        </select>
    </p>
    <p>
        子类型
        <select asp-for="SubeffectId" asp-items="Model.SubeffectTypes">
            <option value=null>任意</option>
        </select>
    </p>
    <p>
        作用范围
        <select asp-for="Range" asp-items="Model.RangeTypes">
            <option value=null>任意</option>
        </select>
    </p>
    <p>
        角色式专用效果
        <select asp-for="UnitRoleTypeId" asp-items="Model.UnitRoleTypes">
            <option value=null>任意</option>
        </select>
    </p>
    <p><b>面板:</b></p>
    <p>
        <p>@Html.CheckBox("CorrType1", false) 体力 @Html.CheckBox("CorrType6", false) 速度</p>
        <p>@Html.CheckBox("CorrType2", false) 阳攻 @Html.CheckBox("CorrType3", false) 阳防</p>
        <p>@Html.CheckBox("CorrType4", false) 阴攻 @Html.CheckBox("CorrType5", false) 阴防</p>
    </p>
    <input type="submit" value="筛选" />
</form>
<table class="table">
    <thead>
        <tr>
            @*<th>
                @Html.DisplayNameFor(model => model.PictureDatas![0].id)
            </th>*@
            <th>
                名称
            </th>
            <th>
                星级
            </th>
            <th>
                面板1
            </th>
            <th>
                面板2
            </th>
            <th>
                绘卷效果（未满破）
            </th>
            <th>
                绘卷效果(满破)
            </th>
            <th>
                图片
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.PictureDatas!)
    {
        <tr>
            @*<td>
                @Html.DisplayFor(modelItem => item.id)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.rare)
            </td>
            <td>
                @Html.Raw(GeneralHelper.StringFromDatabaseForDisplay(GeneralTypeMaster.CorrectionStr(item.correction1_type, item.correction1_value)))
            </td>
            <td>
                @Html.Raw(GeneralHelper.StringFromDatabaseForDisplay(GeneralTypeMaster.CorrectionStr(item.correction2_type, item.correction2_value)))
            </td>
            <td>
                @Html.Raw(GeneralHelper.StringFromDatabaseForDisplay(item.picture_characteristic_text))
            </td>
            <td>
                @Html.Raw(GeneralHelper.StringFromDatabaseForDisplay(item.picture_characteristic_text_max))
            </td>
            <td>
                <img src="@Url.Content("~/res/pictures_img/" + item.id + ".png")" alt="暂无图片" width="70" height="70" />
            </td>
        </tr>
}
    </tbody>
</table>

@*@model IEnumerable<THLWToolBox.Models.PictureData>*@
@model THLWToolBox.Models.PictureDataViewModel
@using System.Text.RegularExpressions;

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<form asp-controller="PictureDatasFilter" asp-action="Index" method="get">
    <p>
        <p>
            绘卷效果类型
            <select asp-for="EffectId" asp-items="Model.EffectTypes">
                <option value=null>{请选择}(必选)</option>
            </select>
        </p>
        <p>
            子类型
            <select asp-for="SubeffectId" asp-items="Model.SubeffectTypes">
                <option value=null>任意</option>
            </select>
        </p>
        <p>
            作用范围
            <select asp-for="Range" asp-items="Model.RangeTypes">
                <option value=null>任意</option>
            </select>
        </p>
        <input type="submit" value="Filter" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            @*<th>
                @Html.DisplayNameFor(model => model.PictureDatas![0].id)
            </th>*@
            <th>
                @*@Html.DisplayNameFor(model => model.PictureDatas![0].name)*@
                名称
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.PictureDatas![0].rare)*@
                星级
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.PictureDatas![0].picture_characteristic_text)*@
                绘卷效果（未满破）
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.PictureDatas![0].picture_characteristic_text)*@
                绘卷效果(满破)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.PictureDatas!)
    {
        <tr>
            @*<td>
                @Html.DisplayFor(modelItem => item.id)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.rare)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.picture_characteristic_text)*@
                    @{
                        string effectText = item.picture_characteristic_text;
                        effectText = Regex.Replace(effectText, "<color.*?>", "");
                        effectText = Regex.Replace(effectText, "</color>", "");
                        effectText = Html.Encode(effectText).Replace("\\n", "<br/>");
                    }
                @Html.Raw(effectText)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.picture_characteristic_text)*@
                    @{
                        string effectTextMax = item.picture_characteristic_text_max;
                        effectTextMax = Regex.Replace(effectTextMax, "<color.*?>", "");
                        effectTextMax = Regex.Replace(effectTextMax, "</color>", "");
                        effectTextMax = Html.Encode(effectTextMax).Replace("\\n", "<br/>");
                    }
                    @Html.Raw(effectTextMax)
            </td>
        </tr>
}
    </tbody>
</table>

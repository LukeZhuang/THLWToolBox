@model UnitShotPowerUpHelperViewModel
@using THLWToolBox.Helpers;
@using THLWToolBox.Models.ViewModels;
@using static THLWToolBox.Helpers.GeneralHelper;
@using static THLWToolBox.Models.ViewModels.UnitShotPowerUpHelperViewModel;

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link rel="stylesheet" href="~/css/filter.css" asp-append-version="true" />
</head>

<!-- Modal -->
<div class="modal fade" id="UnitShotPowerUpHelperModal" tabindex="-1" aria-labelledby="UnitShotPowerUpHelper" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="UnitShotPowerUpHelper">帮助：弹幕补正查询器</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>"弹幕补正"为乘在伤害计算最后的一个隐藏数据。后面的等级为弹幕等级，若是符卡则为觉醒等级，若是射击则为当前持有的灵力（向下取整）</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-bs-dismiss="modal">关闭</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script type="text/javascript">
        $('#UnitSymbolNameInput').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/InputAutoCompleteHelper/SearchUser',
                    dataType: 'json',
                    data: { term: $('#UnitSymbolNameInput').val() },
                    success: function (data) {
                        var result = $.map(data, function (item) {
                            return {
                                label: item
                            };
                        });
                        return response(result);
                    }
                });
            },
            select: function (event, ui) {
                event.preventDefault();
                $('#UnitSymbolNameInput').val(ui.item.label);
            },
            create: function () {
                $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
                    return $('<li>')
                        .append('<div id="ui-id-6" tabindex="-1" class="ui-menu-item-wrapper">'
                            + item.label + '<br></div>')
                        .appendTo(ul);
                };
            }
        });
    </script>
}

<p><b><font color="red">*数据更新日期：@Html.Raw(GeneralHelper.DATA_UPDATE_DATE), 当前版本：@Html.Raw(GeneralHelper.VERSION_STR)</font></b></p>

<div class="text-center">
    <div class="title-box"><img src="@Url.Content("~/res/website/index_btn_bullet.png")" width="60" height="60" /> 弹幕补正查询器</div>
</div>

<div class="home-box">
    <form asp-controller="UnitShotPowerUpHelper" asp-action="Index" method="post">
        <div class="filter-box">
            <div class="title-box-1">按角色名查询</div>
            <div class="selects-grid">
                <div class="selects-box" style="text-align: right">角色名+泛异记号（带补全建议）:</div>
                <div class="selects-box">
                    <input type="text" id="UnitSymbolNameInput" asp-for="UnitSymbolName" class="selector">
                </div>
            </div>
        </div>
        <div class="submit-title-box-1"></div>
        <input type="submit" value="确定" class="btn-submit" />
        <button type="button" class="btn-submit btn-helper" data-bs-toggle="modal" data-bs-target="#UnitShotPowerUpHelperModal">帮助</button>
    </form>
</div>

<div class="home-box">
    <div class="title-result-box-1">要查询的角色</div>
    <table class="table table-light table-bordered">
        <thead>
            <tr>
                <th>
                    头像
                </th>
                <th>
                    角色名
                </th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.QueryUnits!) {
            <tr>
                <td>
                    @Html.Raw(GetImageHtmlRaw(@Url.Content("~/res/units_img/S" + item.id + "01.png")))
                </td>
                <td>
                    @Html.Raw(GetWikiURL(item.name + item.symbol_name))
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<div class="home-box">
    <div class="title-result-box-1">该角色弹幕补正数据表</div>
    <table class="table table-light table-bordered">
        <thead>
            <tr>
                <th>
                    射击种类
                </th>
                <th>
                    射击名
                </th>
                <th>
                    lv0
                </th>
                <th>
                    lv1
                </th>
                <th>
                    lv2
                </th>
                <th>
                    lv3
                </th>
                <th>
                    lv4
                </th>
                <th>
                    lv5
                </th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.PowerUpDatas!) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AttackData.AttackTypeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AttackData.Name)
                </td>
                <td>
                    @Html.Raw(CreatePowerUpRateString(item.AttackData.PowerUpRates[0]))
                </td>
                <td>
                    @Html.Raw(CreatePowerUpRateString(item.AttackData.PowerUpRates[1]))
                </td>
                <td>
                    @Html.Raw(CreatePowerUpRateString(item.AttackData.PowerUpRates[2]))
                </td>
                <td>
                    @Html.Raw(CreatePowerUpRateString(item.AttackData.PowerUpRates[3]))
                </td>
                <td>
                    @Html.Raw(CreatePowerUpRateString(item.AttackData.PowerUpRates[4]))
                </td>
                <td>
                    @Html.Raw(CreatePowerUpRateString(item.AttackData.PowerUpRates[5]))
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

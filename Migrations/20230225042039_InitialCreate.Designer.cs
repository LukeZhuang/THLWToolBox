// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using THLWToolBox.Data;

#nullable disable

namespace THLWToolBox.Migrations
{
    [DbContext(typeof(THLWToolBoxContext))]
    [Migration("20230225042039_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("THLWToolBox.Models.PictureData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("album_id")
                        .HasColumnType("int");

                    b.Property<string>("circle_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("correction1_diff")
                        .HasColumnType("int");

                    b.Property<int>("correction1_type")
                        .HasColumnType("int");

                    b.Property<int>("correction1_value")
                        .HasColumnType("int");

                    b.Property<int>("correction2_diff")
                        .HasColumnType("int");

                    b.Property<int>("correction2_type")
                        .HasColumnType("int");

                    b.Property<int>("correction2_value")
                        .HasColumnType("int");

                    b.Property<string>("flavor_text1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("flavor_text2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("flavor_text3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("flavor_text4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("flavor_text5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("illustrator_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("is_show")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("picture_characteristic1_effect_range")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic1_effect_subtype")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic1_effect_turn")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic1_effect_type")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic1_effect_value")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic1_effect_value_max")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic2_effect_range")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic2_effect_subtype")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic2_effect_turn")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic2_effect_type")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic2_effect_value")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic2_effect_value_max")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic3_effect_range")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic3_effect_subtype")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic3_effect_turn")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic3_effect_type")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic3_effect_value")
                        .HasColumnType("int");

                    b.Property<int>("picture_characteristic3_effect_value_max")
                        .HasColumnType("int");

                    b.Property<string>("picture_characteristic_text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("picture_characteristic_text_max")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rare")
                        .HasColumnType("int");

                    b.Property<int>("recycle_id")
                        .HasColumnType("int");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("PictureData");
                });
#pragma warning restore 612, 618
        }
    }
}
